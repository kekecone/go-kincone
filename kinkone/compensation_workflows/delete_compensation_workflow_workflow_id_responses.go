// Code generated by go-swagger; DO NOT EDIT.

package compensation_workflows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/kekecone/go-kincone/kinkone"
)

// DeleteCompensationWorkflowWorkflowIDReader is a Reader for the DeleteCompensationWorkflowWorkflowID structure.
type DeleteCompensationWorkflowWorkflowIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCompensationWorkflowWorkflowIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCompensationWorkflowWorkflowIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteCompensationWorkflowWorkflowIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCompensationWorkflowWorkflowIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteCompensationWorkflowWorkflowIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCompensationWorkflowWorkflowIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteCompensationWorkflowWorkflowIDOK creates a DeleteCompensationWorkflowWorkflowIDOK with default headers values
func NewDeleteCompensationWorkflowWorkflowIDOK() *DeleteCompensationWorkflowWorkflowIDOK {
	return &DeleteCompensationWorkflowWorkflowIDOK{}
}

/* DeleteCompensationWorkflowWorkflowIDOK describes a response with status code 200, with default header values.

正常時
*/
type DeleteCompensationWorkflowWorkflowIDOK struct {
	Payload *DeleteCompensationWorkflowWorkflowIDOKBody
}

func (o *DeleteCompensationWorkflowWorkflowIDOK) Error() string {
	return fmt.Sprintf("[DELETE /compensation/workflow/{workflowID}][%d] deleteCompensationWorkflowWorkflowIdOK  %+v", 200, o.Payload)
}
func (o *DeleteCompensationWorkflowWorkflowIDOK) GetPayload() *DeleteCompensationWorkflowWorkflowIDOKBody {
	return o.Payload
}

func (o *DeleteCompensationWorkflowWorkflowIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteCompensationWorkflowWorkflowIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCompensationWorkflowWorkflowIDUnauthorized creates a DeleteCompensationWorkflowWorkflowIDUnauthorized with default headers values
func NewDeleteCompensationWorkflowWorkflowIDUnauthorized() *DeleteCompensationWorkflowWorkflowIDUnauthorized {
	return &DeleteCompensationWorkflowWorkflowIDUnauthorized{}
}

/* DeleteCompensationWorkflowWorkflowIDUnauthorized describes a response with status code 401, with default header values.

APIトークンの値を確認して下さい。
*/
type DeleteCompensationWorkflowWorkflowIDUnauthorized struct {
	Payload *kinkone.ErrorModel
}

func (o *DeleteCompensationWorkflowWorkflowIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /compensation/workflow/{workflowID}][%d] deleteCompensationWorkflowWorkflowIdUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteCompensationWorkflowWorkflowIDUnauthorized) GetPayload() *kinkone.ErrorModel {
	return o.Payload
}

func (o *DeleteCompensationWorkflowWorkflowIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(kinkone.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCompensationWorkflowWorkflowIDForbidden creates a DeleteCompensationWorkflowWorkflowIDForbidden with default headers values
func NewDeleteCompensationWorkflowWorkflowIDForbidden() *DeleteCompensationWorkflowWorkflowIDForbidden {
	return &DeleteCompensationWorkflowWorkflowIDForbidden{}
}

/* DeleteCompensationWorkflowWorkflowIDForbidden describes a response with status code 403, with default header values.

APIにアクセスする権限がありません。
*/
type DeleteCompensationWorkflowWorkflowIDForbidden struct {
	Payload *kinkone.ErrorModel
}

func (o *DeleteCompensationWorkflowWorkflowIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /compensation/workflow/{workflowID}][%d] deleteCompensationWorkflowWorkflowIdForbidden  %+v", 403, o.Payload)
}
func (o *DeleteCompensationWorkflowWorkflowIDForbidden) GetPayload() *kinkone.ErrorModel {
	return o.Payload
}

func (o *DeleteCompensationWorkflowWorkflowIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(kinkone.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCompensationWorkflowWorkflowIDUnprocessableEntity creates a DeleteCompensationWorkflowWorkflowIDUnprocessableEntity with default headers values
func NewDeleteCompensationWorkflowWorkflowIDUnprocessableEntity() *DeleteCompensationWorkflowWorkflowIDUnprocessableEntity {
	return &DeleteCompensationWorkflowWorkflowIDUnprocessableEntity{}
}

/* DeleteCompensationWorkflowWorkflowIDUnprocessableEntity describes a response with status code 422, with default header values.

パラメータの値を確認して下さい。
*/
type DeleteCompensationWorkflowWorkflowIDUnprocessableEntity struct {
	Payload *kinkone.ErrorModel
}

func (o *DeleteCompensationWorkflowWorkflowIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /compensation/workflow/{workflowID}][%d] deleteCompensationWorkflowWorkflowIdUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *DeleteCompensationWorkflowWorkflowIDUnprocessableEntity) GetPayload() *kinkone.ErrorModel {
	return o.Payload
}

func (o *DeleteCompensationWorkflowWorkflowIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(kinkone.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCompensationWorkflowWorkflowIDInternalServerError creates a DeleteCompensationWorkflowWorkflowIDInternalServerError with default headers values
func NewDeleteCompensationWorkflowWorkflowIDInternalServerError() *DeleteCompensationWorkflowWorkflowIDInternalServerError {
	return &DeleteCompensationWorkflowWorkflowIDInternalServerError{}
}

/* DeleteCompensationWorkflowWorkflowIDInternalServerError describes a response with status code 500, with default header values.

APIサーバーの内部的なエラーです。
*/
type DeleteCompensationWorkflowWorkflowIDInternalServerError struct {
	Payload *kinkone.ErrorModel
}

func (o *DeleteCompensationWorkflowWorkflowIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /compensation/workflow/{workflowID}][%d] deleteCompensationWorkflowWorkflowIdInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteCompensationWorkflowWorkflowIDInternalServerError) GetPayload() *kinkone.ErrorModel {
	return o.Payload
}

func (o *DeleteCompensationWorkflowWorkflowIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(kinkone.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteCompensationWorkflowWorkflowIDOKBody delete compensation workflow workflow ID o k body
swagger:model DeleteCompensationWorkflowWorkflowIDOKBody
*/
type DeleteCompensationWorkflowWorkflowIDOKBody struct {

	// response
	Response *DeleteCompensationWorkflowWorkflowIDOKBodyResponse `json:"response,omitempty"`

	// 結果コード
	ResultCode string `json:"result_code,omitempty"`

	// 結果ステータス
	Status bool `json:"status,omitempty"`
}

// Validate validates this delete compensation workflow workflow ID o k body
func (o *DeleteCompensationWorkflowWorkflowIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResponse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCompensationWorkflowWorkflowIDOKBody) validateResponse(formats strfmt.Registry) error {
	if swag.IsZero(o.Response) { // not required
		return nil
	}

	if o.Response != nil {
		if err := o.Response.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deleteCompensationWorkflowWorkflowIdOK" + "." + "response")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this delete compensation workflow workflow ID o k body based on the context it is used
func (o *DeleteCompensationWorkflowWorkflowIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateResponse(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCompensationWorkflowWorkflowIDOKBody) contextValidateResponse(ctx context.Context, formats strfmt.Registry) error {

	if o.Response != nil {
		if err := o.Response.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("deleteCompensationWorkflowWorkflowIdOK" + "." + "response")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCompensationWorkflowWorkflowIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCompensationWorkflowWorkflowIDOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteCompensationWorkflowWorkflowIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCompensationWorkflowWorkflowIDOKBodyResponse APIレスポンス
swagger:model DeleteCompensationWorkflowWorkflowIDOKBodyResponse
*/
type DeleteCompensationWorkflowWorkflowIDOKBodyResponse struct {

	// 処理結果
	Result bool `json:"result,omitempty"`
}

// Validate validates this delete compensation workflow workflow ID o k body response
func (o *DeleteCompensationWorkflowWorkflowIDOKBodyResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this delete compensation workflow workflow ID o k body response based on context it is used
func (o *DeleteCompensationWorkflowWorkflowIDOKBodyResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCompensationWorkflowWorkflowIDOKBodyResponse) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCompensationWorkflowWorkflowIDOKBodyResponse) UnmarshalBinary(b []byte) error {
	var res DeleteCompensationWorkflowWorkflowIDOKBodyResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
