// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BreakModel 休憩
//
// swagger:model breakModel
type BreakModel struct {

	// 休憩時間
	Duration string `json:"duration,omitempty"`

	// 休憩終了日時
	End string `json:"end,omitempty"`

	// 休憩終了時レコーダー名
	EndDevice string `json:"end_device,omitempty"`

	// 休憩終了時緯度
	EndLatitude string `json:"end_latitude,omitempty"`

	// 休憩終了時経度
	EndLongitude string `json:"end_longitude,omitempty"`

	// 備考
	Note string `json:"note,omitempty"`

	// 休憩開始日時
	Start string `json:"start,omitempty"`

	// 休憩開始時レコーダー名
	StartDevice string `json:"start_device,omitempty"`

	// 休憩開始時緯度
	StartLatitude string `json:"start_latitude,omitempty"`

	// 休憩開始時経度
	StartLongitude string `json:"start_longitude,omitempty"`
}

// Validate validates this break model
func (m *BreakModel) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this break model based on context it is used
func (m *BreakModel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BreakModel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BreakModel) UnmarshalBinary(b []byte) error {
	var res BreakModel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
