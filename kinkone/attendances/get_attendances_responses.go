// Code generated by go-swagger; DO NOT EDIT.

package attendances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/kekecone/go-kincone/kinkone/model"
)

// GetAttendancesReader is a Reader for the GetAttendances structure.
type GetAttendancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAttendancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAttendancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAttendancesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAttendancesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetAttendancesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAttendancesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAttendancesOK creates a GetAttendancesOK with default headers values
func NewGetAttendancesOK() *GetAttendancesOK {
	return &GetAttendancesOK{}
}

/* GetAttendancesOK describes a response with status code 200, with default header values.

正常時
*/
type GetAttendancesOK struct {
	Payload *GetAttendancesOKBody
}

func (o *GetAttendancesOK) Error() string {
	return fmt.Sprintf("[GET /attendances][%d] getAttendancesOK  %+v", 200, o.Payload)
}
func (o *GetAttendancesOK) GetPayload() *GetAttendancesOKBody {
	return o.Payload
}

func (o *GetAttendancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetAttendancesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttendancesUnauthorized creates a GetAttendancesUnauthorized with default headers values
func NewGetAttendancesUnauthorized() *GetAttendancesUnauthorized {
	return &GetAttendancesUnauthorized{}
}

/* GetAttendancesUnauthorized describes a response with status code 401, with default header values.

APIトークンの値を確認して下さい。
*/
type GetAttendancesUnauthorized struct {
	Payload *model.ErrorModel
}

func (o *GetAttendancesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /attendances][%d] getAttendancesUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAttendancesUnauthorized) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *GetAttendancesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttendancesForbidden creates a GetAttendancesForbidden with default headers values
func NewGetAttendancesForbidden() *GetAttendancesForbidden {
	return &GetAttendancesForbidden{}
}

/* GetAttendancesForbidden describes a response with status code 403, with default header values.

APIにアクセスする権限がありません。
*/
type GetAttendancesForbidden struct {
	Payload *model.ErrorModel
}

func (o *GetAttendancesForbidden) Error() string {
	return fmt.Sprintf("[GET /attendances][%d] getAttendancesForbidden  %+v", 403, o.Payload)
}
func (o *GetAttendancesForbidden) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *GetAttendancesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttendancesUnprocessableEntity creates a GetAttendancesUnprocessableEntity with default headers values
func NewGetAttendancesUnprocessableEntity() *GetAttendancesUnprocessableEntity {
	return &GetAttendancesUnprocessableEntity{}
}

/* GetAttendancesUnprocessableEntity describes a response with status code 422, with default header values.

パラメータの値を確認して下さい。
*/
type GetAttendancesUnprocessableEntity struct {
	Payload *model.ErrorModel
}

func (o *GetAttendancesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /attendances][%d] getAttendancesUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *GetAttendancesUnprocessableEntity) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *GetAttendancesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAttendancesInternalServerError creates a GetAttendancesInternalServerError with default headers values
func NewGetAttendancesInternalServerError() *GetAttendancesInternalServerError {
	return &GetAttendancesInternalServerError{}
}

/* GetAttendancesInternalServerError describes a response with status code 500, with default header values.

APIサーバーの内部的なエラーです。
*/
type GetAttendancesInternalServerError struct {
	Payload *model.ErrorModel
}

func (o *GetAttendancesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /attendances][%d] getAttendancesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetAttendancesInternalServerError) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *GetAttendancesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetAttendancesOKBody get attendances o k body
swagger:model GetAttendancesOKBody
*/
type GetAttendancesOKBody struct {

	// response
	Response *GetAttendancesOKBodyResponse `json:"response,omitempty"`

	// 結果コード
	ResultCode string `json:"result_code,omitempty"`

	// 結果ステータス
	Status bool `json:"status,omitempty"`
}

// Validate validates this get attendances o k body
func (o *GetAttendancesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResponse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAttendancesOKBody) validateResponse(formats strfmt.Registry) error {
	if swag.IsZero(o.Response) { // not required
		return nil
	}

	if o.Response != nil {
		if err := o.Response.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAttendancesOK" + "." + "response")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get attendances o k body based on the context it is used
func (o *GetAttendancesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateResponse(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAttendancesOKBody) contextValidateResponse(ctx context.Context, formats strfmt.Registry) error {

	if o.Response != nil {
		if err := o.Response.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getAttendancesOK" + "." + "response")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAttendancesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttendancesOKBody) UnmarshalBinary(b []byte) error {
	var res GetAttendancesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetAttendancesOKBodyResponse APIレスポンス
swagger:model GetAttendancesOKBodyResponse
*/
type GetAttendancesOKBodyResponse struct {

	// attendances
	Attendances []*model.AttendanceModel `json:"attendances"`
}

// Validate validates this get attendances o k body response
func (o *GetAttendancesOKBodyResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttendances(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAttendancesOKBodyResponse) validateAttendances(formats strfmt.Registry) error {
	if swag.IsZero(o.Attendances) { // not required
		return nil
	}

	for i := 0; i < len(o.Attendances); i++ {
		if swag.IsZero(o.Attendances[i]) { // not required
			continue
		}

		if o.Attendances[i] != nil {
			if err := o.Attendances[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAttendancesOK" + "." + "response" + "." + "attendances" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get attendances o k body response based on the context it is used
func (o *GetAttendancesOKBodyResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAttendances(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetAttendancesOKBodyResponse) contextValidateAttendances(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Attendances); i++ {

		if o.Attendances[i] != nil {
			if err := o.Attendances[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getAttendancesOK" + "." + "response" + "." + "attendances" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetAttendancesOKBodyResponse) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAttendancesOKBodyResponse) UnmarshalBinary(b []byte) error {
	var res GetAttendancesOKBodyResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
