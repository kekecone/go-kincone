// Code generated by go-swagger; DO NOT EDIT.

package expense_workflows

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/kekecone/go-kincone/kinkone/model"
)

// PostExpenseWorkflowWorkflowIDReader is a Reader for the PostExpenseWorkflowWorkflowID structure.
type PostExpenseWorkflowWorkflowIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostExpenseWorkflowWorkflowIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostExpenseWorkflowWorkflowIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostExpenseWorkflowWorkflowIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostExpenseWorkflowWorkflowIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPostExpenseWorkflowWorkflowIDUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostExpenseWorkflowWorkflowIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostExpenseWorkflowWorkflowIDOK creates a PostExpenseWorkflowWorkflowIDOK with default headers values
func NewPostExpenseWorkflowWorkflowIDOK() *PostExpenseWorkflowWorkflowIDOK {
	return &PostExpenseWorkflowWorkflowIDOK{}
}

/* PostExpenseWorkflowWorkflowIDOK describes a response with status code 200, with default header values.

正常時
*/
type PostExpenseWorkflowWorkflowIDOK struct {
	Payload *PostExpenseWorkflowWorkflowIDOKBody
}

func (o *PostExpenseWorkflowWorkflowIDOK) Error() string {
	return fmt.Sprintf("[POST /expense/workflow/{workflowID}][%d] postExpenseWorkflowWorkflowIdOK  %+v", 200, o.Payload)
}
func (o *PostExpenseWorkflowWorkflowIDOK) GetPayload() *PostExpenseWorkflowWorkflowIDOKBody {
	return o.Payload
}

func (o *PostExpenseWorkflowWorkflowIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostExpenseWorkflowWorkflowIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExpenseWorkflowWorkflowIDUnauthorized creates a PostExpenseWorkflowWorkflowIDUnauthorized with default headers values
func NewPostExpenseWorkflowWorkflowIDUnauthorized() *PostExpenseWorkflowWorkflowIDUnauthorized {
	return &PostExpenseWorkflowWorkflowIDUnauthorized{}
}

/* PostExpenseWorkflowWorkflowIDUnauthorized describes a response with status code 401, with default header values.

APIトークンの値を確認して下さい。
*/
type PostExpenseWorkflowWorkflowIDUnauthorized struct {
	Payload *model.ErrorModel
}

func (o *PostExpenseWorkflowWorkflowIDUnauthorized) Error() string {
	return fmt.Sprintf("[POST /expense/workflow/{workflowID}][%d] postExpenseWorkflowWorkflowIdUnauthorized  %+v", 401, o.Payload)
}
func (o *PostExpenseWorkflowWorkflowIDUnauthorized) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *PostExpenseWorkflowWorkflowIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExpenseWorkflowWorkflowIDForbidden creates a PostExpenseWorkflowWorkflowIDForbidden with default headers values
func NewPostExpenseWorkflowWorkflowIDForbidden() *PostExpenseWorkflowWorkflowIDForbidden {
	return &PostExpenseWorkflowWorkflowIDForbidden{}
}

/* PostExpenseWorkflowWorkflowIDForbidden describes a response with status code 403, with default header values.

APIにアクセスする権限がありません。
*/
type PostExpenseWorkflowWorkflowIDForbidden struct {
	Payload *model.ErrorModel
}

func (o *PostExpenseWorkflowWorkflowIDForbidden) Error() string {
	return fmt.Sprintf("[POST /expense/workflow/{workflowID}][%d] postExpenseWorkflowWorkflowIdForbidden  %+v", 403, o.Payload)
}
func (o *PostExpenseWorkflowWorkflowIDForbidden) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *PostExpenseWorkflowWorkflowIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExpenseWorkflowWorkflowIDUnprocessableEntity creates a PostExpenseWorkflowWorkflowIDUnprocessableEntity with default headers values
func NewPostExpenseWorkflowWorkflowIDUnprocessableEntity() *PostExpenseWorkflowWorkflowIDUnprocessableEntity {
	return &PostExpenseWorkflowWorkflowIDUnprocessableEntity{}
}

/* PostExpenseWorkflowWorkflowIDUnprocessableEntity describes a response with status code 422, with default header values.

パラメータの値を確認して下さい。
*/
type PostExpenseWorkflowWorkflowIDUnprocessableEntity struct {
	Payload *model.ErrorModel
}

func (o *PostExpenseWorkflowWorkflowIDUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /expense/workflow/{workflowID}][%d] postExpenseWorkflowWorkflowIdUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *PostExpenseWorkflowWorkflowIDUnprocessableEntity) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *PostExpenseWorkflowWorkflowIDUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostExpenseWorkflowWorkflowIDInternalServerError creates a PostExpenseWorkflowWorkflowIDInternalServerError with default headers values
func NewPostExpenseWorkflowWorkflowIDInternalServerError() *PostExpenseWorkflowWorkflowIDInternalServerError {
	return &PostExpenseWorkflowWorkflowIDInternalServerError{}
}

/* PostExpenseWorkflowWorkflowIDInternalServerError describes a response with status code 500, with default header values.

APIサーバーの内部的なエラーです。
*/
type PostExpenseWorkflowWorkflowIDInternalServerError struct {
	Payload *model.ErrorModel
}

func (o *PostExpenseWorkflowWorkflowIDInternalServerError) Error() string {
	return fmt.Sprintf("[POST /expense/workflow/{workflowID}][%d] postExpenseWorkflowWorkflowIdInternalServerError  %+v", 500, o.Payload)
}
func (o *PostExpenseWorkflowWorkflowIDInternalServerError) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *PostExpenseWorkflowWorkflowIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostExpenseWorkflowWorkflowIDOKBody post expense workflow workflow ID o k body
swagger:model PostExpenseWorkflowWorkflowIDOKBody
*/
type PostExpenseWorkflowWorkflowIDOKBody struct {

	// response
	Response *PostExpenseWorkflowWorkflowIDOKBodyResponse `json:"response,omitempty"`

	// 結果コード
	ResultCode string `json:"result_code,omitempty"`

	// 結果ステータス
	Status bool `json:"status,omitempty"`
}

// Validate validates this post expense workflow workflow ID o k body
func (o *PostExpenseWorkflowWorkflowIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResponse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostExpenseWorkflowWorkflowIDOKBody) validateResponse(formats strfmt.Registry) error {
	if swag.IsZero(o.Response) { // not required
		return nil
	}

	if o.Response != nil {
		if err := o.Response.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postExpenseWorkflowWorkflowIdOK" + "." + "response")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post expense workflow workflow ID o k body based on the context it is used
func (o *PostExpenseWorkflowWorkflowIDOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateResponse(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostExpenseWorkflowWorkflowIDOKBody) contextValidateResponse(ctx context.Context, formats strfmt.Registry) error {

	if o.Response != nil {
		if err := o.Response.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postExpenseWorkflowWorkflowIdOK" + "." + "response")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostExpenseWorkflowWorkflowIDOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostExpenseWorkflowWorkflowIDOKBody) UnmarshalBinary(b []byte) error {
	var res PostExpenseWorkflowWorkflowIDOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostExpenseWorkflowWorkflowIDOKBodyResponse APIレスポンス
swagger:model PostExpenseWorkflowWorkflowIDOKBodyResponse
*/
type PostExpenseWorkflowWorkflowIDOKBodyResponse struct {

	// 処理結果
	Result bool `json:"result,omitempty"`
}

// Validate validates this post expense workflow workflow ID o k body response
func (o *PostExpenseWorkflowWorkflowIDOKBodyResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this post expense workflow workflow ID o k body response based on context it is used
func (o *PostExpenseWorkflowWorkflowIDOKBodyResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostExpenseWorkflowWorkflowIDOKBodyResponse) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostExpenseWorkflowWorkflowIDOKBodyResponse) UnmarshalBinary(b []byte) error {
	var res PostExpenseWorkflowWorkflowIDOKBodyResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
