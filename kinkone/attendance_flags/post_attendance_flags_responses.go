// Code generated by go-swagger; DO NOT EDIT.

package attendance_flags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/kekecone/go-kincone/kinkone/model"
)

// PostAttendanceFlagsReader is a Reader for the PostAttendanceFlags structure.
type PostAttendanceFlagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAttendanceFlagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAttendanceFlagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostAttendanceFlagsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostAttendanceFlagsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPostAttendanceFlagsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAttendanceFlagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostAttendanceFlagsOK creates a PostAttendanceFlagsOK with default headers values
func NewPostAttendanceFlagsOK() *PostAttendanceFlagsOK {
	return &PostAttendanceFlagsOK{}
}

/* PostAttendanceFlagsOK describes a response with status code 200, with default header values.

正常時
*/
type PostAttendanceFlagsOK struct {
	Payload *PostAttendanceFlagsOKBody
}

func (o *PostAttendanceFlagsOK) Error() string {
	return fmt.Sprintf("[POST /attendance/flags][%d] postAttendanceFlagsOK  %+v", 200, o.Payload)
}
func (o *PostAttendanceFlagsOK) GetPayload() *PostAttendanceFlagsOKBody {
	return o.Payload
}

func (o *PostAttendanceFlagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostAttendanceFlagsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAttendanceFlagsUnauthorized creates a PostAttendanceFlagsUnauthorized with default headers values
func NewPostAttendanceFlagsUnauthorized() *PostAttendanceFlagsUnauthorized {
	return &PostAttendanceFlagsUnauthorized{}
}

/* PostAttendanceFlagsUnauthorized describes a response with status code 401, with default header values.

APIトークンの値を確認して下さい。
*/
type PostAttendanceFlagsUnauthorized struct {
	Payload *model.ErrorModel
}

func (o *PostAttendanceFlagsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /attendance/flags][%d] postAttendanceFlagsUnauthorized  %+v", 401, o.Payload)
}
func (o *PostAttendanceFlagsUnauthorized) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *PostAttendanceFlagsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAttendanceFlagsForbidden creates a PostAttendanceFlagsForbidden with default headers values
func NewPostAttendanceFlagsForbidden() *PostAttendanceFlagsForbidden {
	return &PostAttendanceFlagsForbidden{}
}

/* PostAttendanceFlagsForbidden describes a response with status code 403, with default header values.

APIにアクセスする権限がありません。
*/
type PostAttendanceFlagsForbidden struct {
	Payload *model.ErrorModel
}

func (o *PostAttendanceFlagsForbidden) Error() string {
	return fmt.Sprintf("[POST /attendance/flags][%d] postAttendanceFlagsForbidden  %+v", 403, o.Payload)
}
func (o *PostAttendanceFlagsForbidden) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *PostAttendanceFlagsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAttendanceFlagsUnprocessableEntity creates a PostAttendanceFlagsUnprocessableEntity with default headers values
func NewPostAttendanceFlagsUnprocessableEntity() *PostAttendanceFlagsUnprocessableEntity {
	return &PostAttendanceFlagsUnprocessableEntity{}
}

/* PostAttendanceFlagsUnprocessableEntity describes a response with status code 422, with default header values.

パラメータの値を確認して下さい。
*/
type PostAttendanceFlagsUnprocessableEntity struct {
	Payload *model.ErrorModel
}

func (o *PostAttendanceFlagsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /attendance/flags][%d] postAttendanceFlagsUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *PostAttendanceFlagsUnprocessableEntity) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *PostAttendanceFlagsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAttendanceFlagsInternalServerError creates a PostAttendanceFlagsInternalServerError with default headers values
func NewPostAttendanceFlagsInternalServerError() *PostAttendanceFlagsInternalServerError {
	return &PostAttendanceFlagsInternalServerError{}
}

/* PostAttendanceFlagsInternalServerError describes a response with status code 500, with default header values.

APIサーバーの内部的なエラーです。
*/
type PostAttendanceFlagsInternalServerError struct {
	Payload *model.ErrorModel
}

func (o *PostAttendanceFlagsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /attendance/flags][%d] postAttendanceFlagsInternalServerError  %+v", 500, o.Payload)
}
func (o *PostAttendanceFlagsInternalServerError) GetPayload() *model.ErrorModel {
	return o.Payload
}

func (o *PostAttendanceFlagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostAttendanceFlagsOKBody post attendance flags o k body
swagger:model PostAttendanceFlagsOKBody
*/
type PostAttendanceFlagsOKBody struct {

	// response
	Response *PostAttendanceFlagsOKBodyResponse `json:"response,omitempty"`

	// 結果コード
	ResultCode string `json:"result_code,omitempty"`

	// 結果ステータス
	Status bool `json:"status,omitempty"`
}

// Validate validates this post attendance flags o k body
func (o *PostAttendanceFlagsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResponse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostAttendanceFlagsOKBody) validateResponse(formats strfmt.Registry) error {
	if swag.IsZero(o.Response) { // not required
		return nil
	}

	if o.Response != nil {
		if err := o.Response.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postAttendanceFlagsOK" + "." + "response")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post attendance flags o k body based on the context it is used
func (o *PostAttendanceFlagsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateResponse(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostAttendanceFlagsOKBody) contextValidateResponse(ctx context.Context, formats strfmt.Registry) error {

	if o.Response != nil {
		if err := o.Response.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postAttendanceFlagsOK" + "." + "response")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostAttendanceFlagsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAttendanceFlagsOKBody) UnmarshalBinary(b []byte) error {
	var res PostAttendanceFlagsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostAttendanceFlagsOKBodyResponse APIレスポンス
swagger:model PostAttendanceFlagsOKBodyResponse
*/
type PostAttendanceFlagsOKBodyResponse struct {

	// attendance
	Attendance *model.AttendanceModel `json:"attendance,omitempty"`
}

// Validate validates this post attendance flags o k body response
func (o *PostAttendanceFlagsOKBodyResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttendance(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostAttendanceFlagsOKBodyResponse) validateAttendance(formats strfmt.Registry) error {
	if swag.IsZero(o.Attendance) { // not required
		return nil
	}

	if o.Attendance != nil {
		if err := o.Attendance.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postAttendanceFlagsOK" + "." + "response" + "." + "attendance")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this post attendance flags o k body response based on the context it is used
func (o *PostAttendanceFlagsOKBodyResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAttendance(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostAttendanceFlagsOKBodyResponse) contextValidateAttendance(ctx context.Context, formats strfmt.Registry) error {

	if o.Attendance != nil {
		if err := o.Attendance.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("postAttendanceFlagsOK" + "." + "response" + "." + "attendance")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostAttendanceFlagsOKBodyResponse) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostAttendanceFlagsOKBodyResponse) UnmarshalBinary(b []byte) error {
	var res PostAttendanceFlagsOKBodyResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
