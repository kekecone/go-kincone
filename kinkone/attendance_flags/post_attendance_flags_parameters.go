// Code generated by go-swagger; DO NOT EDIT.

package attendance_flags

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostAttendanceFlagsParams creates a new PostAttendanceFlagsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostAttendanceFlagsParams() *PostAttendanceFlagsParams {
	return &PostAttendanceFlagsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostAttendanceFlagsParamsWithTimeout creates a new PostAttendanceFlagsParams object
// with the ability to set a timeout on a request.
func NewPostAttendanceFlagsParamsWithTimeout(timeout time.Duration) *PostAttendanceFlagsParams {
	return &PostAttendanceFlagsParams{
		timeout: timeout,
	}
}

// NewPostAttendanceFlagsParamsWithContext creates a new PostAttendanceFlagsParams object
// with the ability to set a context for a request.
func NewPostAttendanceFlagsParamsWithContext(ctx context.Context) *PostAttendanceFlagsParams {
	return &PostAttendanceFlagsParams{
		Context: ctx,
	}
}

// NewPostAttendanceFlagsParamsWithHTTPClient creates a new PostAttendanceFlagsParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostAttendanceFlagsParamsWithHTTPClient(client *http.Client) *PostAttendanceFlagsParams {
	return &PostAttendanceFlagsParams{
		HTTPClient: client,
	}
}

/* PostAttendanceFlagsParams contains all the parameters to send to the API endpoint
   for the post attendance flags operation.

   Typically these are written to a http.Request.
*/
type PostAttendanceFlagsParams struct {

	/* Date.

	   日付（YYYY-MM-DD）
	*/
	Date string

	/* Email.

	   メールアドレス
	*/
	Email string

	/* Flags.

	   登録したい休日等の種別名の配列
	*/
	Flags []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post attendance flags params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAttendanceFlagsParams) WithDefaults() *PostAttendanceFlagsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post attendance flags params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostAttendanceFlagsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post attendance flags params
func (o *PostAttendanceFlagsParams) WithTimeout(timeout time.Duration) *PostAttendanceFlagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post attendance flags params
func (o *PostAttendanceFlagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post attendance flags params
func (o *PostAttendanceFlagsParams) WithContext(ctx context.Context) *PostAttendanceFlagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post attendance flags params
func (o *PostAttendanceFlagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post attendance flags params
func (o *PostAttendanceFlagsParams) WithHTTPClient(client *http.Client) *PostAttendanceFlagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post attendance flags params
func (o *PostAttendanceFlagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDate adds the date to the post attendance flags params
func (o *PostAttendanceFlagsParams) WithDate(date string) *PostAttendanceFlagsParams {
	o.SetDate(date)
	return o
}

// SetDate adds the date to the post attendance flags params
func (o *PostAttendanceFlagsParams) SetDate(date string) {
	o.Date = date
}

// WithEmail adds the email to the post attendance flags params
func (o *PostAttendanceFlagsParams) WithEmail(email string) *PostAttendanceFlagsParams {
	o.SetEmail(email)
	return o
}

// SetEmail adds the email to the post attendance flags params
func (o *PostAttendanceFlagsParams) SetEmail(email string) {
	o.Email = email
}

// WithFlags adds the flags to the post attendance flags params
func (o *PostAttendanceFlagsParams) WithFlags(flags []string) *PostAttendanceFlagsParams {
	o.SetFlags(flags)
	return o
}

// SetFlags adds the flags to the post attendance flags params
func (o *PostAttendanceFlagsParams) SetFlags(flags []string) {
	o.Flags = flags
}

// WriteToRequest writes these params to a swagger request
func (o *PostAttendanceFlagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// form param date
	frDate := o.Date
	fDate := frDate
	if fDate != "" {
		if err := r.SetFormParam("date", fDate); err != nil {
			return err
		}
	}

	// form param email
	frEmail := o.Email
	fEmail := frEmail
	if fEmail != "" {
		if err := r.SetFormParam("email", fEmail); err != nil {
			return err
		}
	}

	if o.Flags != nil {

		// binding items for flags
		joinedFlags := o.bindParamFlags(reg)

		// form array param flags
		if err := r.SetFormParam("flags", joinedFlags...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamPostAttendanceFlags binds the parameter flags
func (o *PostAttendanceFlagsParams) bindParamFlags(formats strfmt.Registry) []string {
	flagsIR := o.Flags

	var flagsIC []string
	for _, flagsIIR := range flagsIR { // explode []string

		flagsIIV := flagsIIR // string as string
		flagsIC = append(flagsIC, flagsIIV)
	}

	// items.CollectionFormat: ""
	flagsIS := swag.JoinByFormat(flagsIC, "")

	return flagsIS
}
